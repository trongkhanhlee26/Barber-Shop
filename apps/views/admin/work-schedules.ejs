<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">
  <title>Quản lý nhân viên</title>
  <link rel="icon" href="static/img/favicon.png">

  <!-- Google Fonts -->
  <link
    href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
    rel="stylesheet">

  <!-- Vendor CSS Files -->
  <link href="/static/admin/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  <link href="/static/admin/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
  <link href="/static/admin/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
  <link href="/static/admin/vendor/quill/quill.snow.css" rel="stylesheet">
  <link href="/static/admin/vendor/quill/quill.bubble.css" rel="stylesheet">
  <link href="/static/admin/vendor/remixicon/remixicon.css" rel="stylesheet">
  <link href="/static/admin/vendor/simple-datatables/style.css" rel="stylesheet">

  <!-- Template Main CSS File -->
  <link href="/static/admin/css/style.css" rel="stylesheet">

  <style>
    body {
      font-family: Arial, sans-serif;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin: 20px 0;
    }

    th, td {
      border: 1px solid #ccc;
      padding: 8px;
      text-align: center;
    }

    th {
      background-color: #9b59b6;
      color: white;
    }

    .checkbox-cell {
      text-align: center;
    }

    .checkbox-cell input[type="checkbox"] {
      width: 20px;
      height: 20px;
      cursor: pointer;
    }

    .edit-button {
      margin: 10px;
    }

    .schedule-table thead th {
      background-color: #6c757d;
      color: white;
    }

    .save-button, .cancel-button {
      margin-top: 20px;
      display: none;
    }

    .form-label {
      font-weight: bold;
      margin-bottom: 5px;
    }

    .d-flex {
      gap: 20px;
    }

    .employee-dropdown {
      margin-bottom: 20px;
    }
  </style>
</head>

<body>

  <!-- Include Header -->
  <%- include('partials/header'); %>

  <!-- Include Sidebar -->
  <%- include('partials/sidebar'); %>

  <main id="main" class="main">
    <div class="pagetitle">
      <h1>QUẢN LÝ NHÂN VIÊN</h1>
      <nav>
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/admin">Trang chủ</a></li>
        </ol>
      </nav>
    </div>

    <section class="section">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Lịch làm việc theo tuần</h5>

          <div class="employee-dropdown">
            <label for="employeeSelect" class="form-label">Chọn nhân viên:</label>
            <select id="employeeSelect" class="form-select" onchange="loadScheduleForEmployee()">
              <option value="">-- Chọn nhân viên --</option>
            </select>
          </div>

          <!-- Nút chuyển tuần -->
          <div class="d-flex justify-content-between align-items-center">
            <button class="btn btn-secondary" onclick="previousWeek()">Tuần trước</button>
            <div id="weekDisplay" class="text-center"></div>
            <button class="btn btn-secondary" onclick="nextWeek()">Tuần sau</button>
          </div>

          <!-- Bảng lịch làm việc sẽ hiển thị sau khi chọn nhân viên -->
          <div id="scheduleContainer" style="display: none;">
            <!-- Nút Chỉnh Sửa -->
            <button class="btn btn-primary edit-button" onclick="toggleEditMode()">Chỉnh sửa</button>

            <table class="table table-striped schedule-table">
                <thead>
                    <tr>
                        <th>Ca làm</th>
                        <th>Thứ 2<br><span id="date-monday"></span></th>
                        <th>Thứ 3<br><span id="date-tuesday"></span></th>
                        <th>Thứ 4<br><span id="date-wednesday"></span></th>
                        <th>Thứ 5<br><span id="date-thursday"></span></th>
                        <th>Thứ 6<br><span id="date-friday"></span></th>
                        <th>Thứ 7<br><span id="date-saturday"></span></th>
                        <th>Chủ Nhật<br><span id="date-sunday"></span></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Sáng (9h-14h)</td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-morning-1" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-morning-2" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-morning-3" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-morning-4" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-morning-5" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-morning-6" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-morning-0" disabled></td>
                    </tr>
                    <tr>
                        <td>Chiều (14h-19h)</td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-afternoon-1" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-afternoon-2" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-afternoon-3" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-afternoon-4" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-afternoon-5" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-afternoon-6" disabled></td>
                        <td class="checkbox-cell"><input type="checkbox" id="checkbox-afternoon-0" disabled></td>
                    </tr>
                </tbody>
            </table>

            <!-- Nút Lưu và Hủy -->
            <button class="btn btn-success save-button" onclick="saveSchedule()" style="display:none;">Lưu</button>
            <button class="btn btn-secondary cancel-button" onclick="cancelEdit()" style="display:none;">Hủy</button>
          </div>
        </div>
      </div>
    </section>
  </main><!-- End Main -->

  <!-- Footer -->
  <footer id="footer" class="footer">
    <div class="copyright">
      &copy; <strong><span>OreoOrChocopie</span></strong>
    </div>
    <div class="credits"></div>
  </footer><!-- End Footer -->

  <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i
      class="bi bi-arrow-up-short"></i></a>

  <!-- Vendor JS Files -->
  <script src="/static/admin/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script>
    let isEditMode = false;
    let currentWeekStartDate = getMonday(new Date()); // Bắt đầu từ thứ 2 của tuần hiện tại


  // AJAX để tải danh sách nhân viên
  $(document).ready(function () {
      $.ajax({
          url: '/admin/barbers',
          method: 'GET',
          success: function (data) {
              const employeeSelect = $('#employeeSelect');
              data.forEach(function (barber) {
                  employeeSelect.append(
                      `<option value="${barber._id}">${barber.userId.fullname}</option>`
                  );
              });
          },
          error: function (error) {
              console.error('Lỗi khi lấy danh sách nhân viên:', error);
          }
      });

      updateWeekDisplay();
  });


    // Lấy thứ 2 của tuần hiện tại
    function getMonday(d) {
      d = new Date(d);
      const day = d.getDay(),
          diff = d.getDate() - day + (day === 0 ? -6 : 1);
      return new Date(d.setDate(diff));
    }

    // Cập nhật hiển thị tuần hiện tại
    function updateWeekDisplay() {
      const weekDates = [];
      for (let i = 0; i < 7; i++) {
        // Lấy từng ngày của tuần hiện tại theo ngày của hệ thống
        const date = new Date(currentWeekStartDate);
        date.setDate(currentWeekStartDate.getDate() + i);
        weekDates.push(date);
      }

      // Hiển thị ngày của từng thứ trong tuần
      $('#date-monday').text(formatDate(weekDates[0]));
      $('#date-tuesday').text(formatDate(weekDates[1]));
      $('#date-wednesday').text(formatDate(weekDates[2]));
      $('#date-thursday').text(formatDate(weekDates[3]));
      $('#date-friday').text(formatDate(weekDates[4]));
      $('#date-saturday').text(formatDate(weekDates[5]));
      $('#date-sunday').text(formatDate(weekDates[6]));

      loadScheduleForEmployee();
    }

    // Định dạng ngày (dd/MM)
    function formatDate(date) {
      const day = date.getDate().toString().padStart(2, '0');
      const month = (date.getMonth() + 1).toString().padStart(2, '0');
      return `${day}/${month}`;
    }

    // Chuyển tuần trước
    function previousWeek() {
        currentWeekStartDate.setDate(currentWeekStartDate.getDate() - 7);
        updateWeekDisplay();
    }

    // Chuyển tuần sau
    function nextWeek() {
        currentWeekStartDate.setDate(currentWeekStartDate.getDate() + 7);
        updateWeekDisplay();
    }

    // Khi chọn một nhân viên, lấy lịch làm việc của họ theo tuần hiện tại
    function loadScheduleForEmployee() {
      const selectedEmployee = $('#employeeSelect').val();
      if (selectedEmployee) {
          const startOfWeek = new Date(currentWeekStartDate);
          const endOfWeek = new Date(currentWeekStartDate);
          endOfWeek.setDate(endOfWeek.getDate() + 6);

          $.ajax({
              url: `/admin/work-schedule/${selectedEmployee}?start=${startOfWeek.toISOString()}&end=${endOfWeek.toISOString()}`,
              method: 'GET',
              success: function (data) {
                  resetSchedule();

                  // Duyệt qua từng lịch làm việc nhận được từ server
                  data.forEach(function (schedule) {
                      let workDate = new Date(schedule.workDate);

                      // Tăng ngày lên 1 để khớp với hiển thị
                      workDate.setDate(workDate.getDate() + 1);

                      // Không chuyển đổi múi giờ, giữ nguyên ngày từ cơ sở dữ liệu
                      const dayIndex = (workDate.getDay() === 0) ? 6 : workDate.getDay() - 1;

                      // Kiểm tra dữ liệu ca sáng
                      if (schedule.shifts.morningShift) {
                          $(`#checkbox-morning-${dayIndex}`).prop('checked', true);
                      }

                      // Kiểm tra dữ liệu ca chiều
                      if (schedule.shifts.afternoonShift) {
                          $(`#checkbox-afternoon-${dayIndex}`).prop('checked', true);
                      }
                  });

                  $('#scheduleContainer').show();
              },
              error: function (error) {
                  console.error('Lỗi khi tải lịch làm việc:', error);
              }
          });
      } else {
          $('#scheduleContainer').hide();
      }
    }


    // Reset tất cả checkbox
    function resetSchedule() {
        $('.checkbox-cell input[type="checkbox"]').prop('checked', false);
    }

    // Chuyển chế độ chỉnh sửa
    function toggleEditMode() {
        isEditMode = !isEditMode;
        document.querySelectorAll('.checkbox-cell input[type="checkbox"]').forEach((checkbox) => {
            checkbox.disabled = !isEditMode;
        });
        document.querySelector('.save-button').style.display = isEditMode ? 'inline-block' : 'none';
        document.querySelector('.cancel-button').style.display = isEditMode ? 'inline-block' : 'none';
    }

    // Khi lưu lịch làm việc, gửi dữ liệu lên server
    function saveSchedule() {
      const selectedEmployee = $('#employeeSelect').val();
      const weekDates = getWeekDates(currentWeekStartDate);

      if (selectedEmployee) {
        weekDates.forEach((date, index) => {
          // Kiểm tra từng ngày trong tuần
          const morningChecked = $(`#checkbox-morning-${index}`).is(':checked');
          const afternoonChecked = $(`#checkbox-afternoon-${index}`).is(':checked');

          if (morningChecked) {
            // Lưu dữ liệu ca sáng
            saveShift(selectedEmployee, date, 'morning');
          }
          if (afternoonChecked) {
            // Lưu dữ liệu ca chiều
            saveShift(selectedEmployee, date, 'afternoon');
          }
        });

        toggleEditMode(); // Thoát chế độ chỉnh sửa sau khi lưu
      } else {
        alert('Vui lòng chọn nhân viên!');
      }
    }

    // Hàm lấy danh sách ngày trong tuần hiện tại
    function getWeekDates(startDate) {
      const weekDates = [];
      for (let i = 0; i < 7; i++) {
        const date = new Date(startDate);
        date.setDate(startDate.getDate() + i);
        weekDates.push(new Date(date)); // Đảm bảo là một bản sao độc lập của ngày
      }
      return weekDates;
    }


    // Gửi thông tin ca làm việc lên server
    function saveShift(employeeId, date, shiftType) {
      const localDate = new Date(date);

      // Thiết lập thời gian cho ca sáng và ca chiều theo giờ hệ thống
      const startTime = shiftType === 'morning' ? new Date(localDate.setHours(9, 0, 0, 0)) : new Date(localDate.setHours(14, 0, 0, 0));
      const endTime = shiftType === 'morning' ? new Date(localDate.setHours(14, 0, 0, 0)) : new Date(localDate.setHours(19, 0, 0, 0));

      // Gửi thông tin ca làm việc lên server mà không chuyển đổi thành ISO
      $.ajax({
        url: '/admin/work-schedule',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({
          employeeId,
          workDate: localDate.toISOString(),  // Gửi thời gian theo local, convert sang ISO để server xử lý đúng ngày
          shiftType
        }),
        success: function (response) {
          console.log('Lưu lịch làm việc thành công:', response.message);
        },
        error: function (error) {
          console.error('Lỗi khi lưu lịch làm việc:', error);
        }
      });
    }


    // Khi hủy chỉnh sửa, đặt lại chế độ
    function cancelEdit() {
        toggleEditMode();
        loadScheduleForEmployee(); // Tải lại lịch làm việc để bỏ các thay đổi không lưu
    }

  </script>
</body>

</html>
